{"version":3,"sources":["scripts/main.js"],"names":["url","urlDetail","body","document","querySelector","getPhones","fetch","then","response","json","list","map","x","id","getFirstReceivedDetails","phones","arr","key","request","push","result","Promise","race","printFirstReceivedDetails","detail","div","createElement","title","ul","li","textContent","className","append","getAllSuccessfulDetails","slice","allSettled","results","filter","details","status","res","value","printAllSuccessfulDetails"],"mappings":";AAEA,aAmFA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjFA,IAAMA,EACF,wEACEC,EACF,oEACEC,EAAOC,SAASC,cAAc,QAE9BC,EAAY,WACTC,OAAAA,MAAMN,GACVO,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GAAQA,OAAAA,EAAKC,IAAI,SAAAC,GAAKA,OAAAA,EAAEC,QAG5BC,EAA0B,SAACC,GACzBC,IADoC,EACpCA,EAAM,GAEMD,EAAAA,EAAAA,GAHwB,IAGhB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfE,IAAAA,EAAe,EAAA,MAClBC,EAAUZ,MAASL,GAAAA,OAAAA,GAAYgB,OAAAA,EAArB,UACbV,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAE7BO,EAAIG,KAAKD,IAP+B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAYnCE,OAFQC,QAAQC,KAAKN,IAK9B,SAASO,EAA0BC,GAC3BC,IAAAA,EAAMtB,SAASuB,cAAc,OAC7BC,EAAQxB,SAASuB,cAAc,MAC/BE,EAAKzB,SAASuB,cAAc,MAC5BG,EAAK1B,SAASuB,cAAc,MAElCC,EAAMG,YAAc,iBACpBL,EAAIM,UAAY,iBAChBF,EAAGC,YAAuBN,SAAAA,OAAAA,EAAM,KAAgBA,SAAAA,OAAAA,EAAM,IACtDC,EAAIO,OAAOL,EAAOC,EAAIC,GACtB3B,EAAK8B,OAAOP,GAGdpB,IACGE,KAAKO,GACLP,KAAKgB,GAER,IAAMU,EAA0B,SAAClB,GACzBC,IADoC,EACpCA,EAAM,GAEMD,EAAAA,EAAAA,GAHwB,IAGhB,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAfE,IAAAA,EAAe,EAAA,MAClBC,EAAUZ,MAASN,GAAAA,OAAAA,EAAIkC,MAAM,GAAI,GAAMjB,KAAAA,OAAAA,EAA7B,UACbV,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAE7BO,EAAIG,KAAKD,IAP+B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAcnCE,OAJQC,QAAQc,WAAWnB,GAC/BT,KAAK,SAAA6B,GAAWA,OAAAA,EAAQC,OAAO,SAAAC,GAAWA,MAAmB,cAAnBA,EAAQC,WAClDhC,KAAK,SAAAiC,GAAOA,OAAAA,EAAI7B,IAAI,SAAA2B,GAAWA,OAAAA,EAAQG,WAK5C,SAASC,EAA0BJ,GAC3Bb,IAAAA,EAAMtB,SAASuB,cAAc,OAC7BC,EAAQxB,SAASuB,cAAc,MAC/BE,EAAKzB,SAASuB,cAAc,MAElCC,EAAMG,YAAc,iBACpBL,EAAIM,UAAY,iBAEhBN,EAAIO,OAAOL,EAAOC,GAClB1B,EAAK8B,OAAOP,GAEMa,IAXwB,EAWxBA,EAAAA,EAAAA,GAXwB,IAWf,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAhBrB,IAAAA,EAAgB,EAAA,MACnBY,EAAK1B,SAASuB,cAAc,MAElCG,EAAGC,YAAuBb,SAAAA,OAAAA,EAAG,KAAgBA,SAAAA,OAAAA,EAAG,IAEhDW,EAAGI,OAAOH,IAhB8B,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,KAoB5CxB,IACGE,KAAK0B,GACL1B,KAAKmC","file":"main.86329a21.js","sourceRoot":"..\\src","sourcesContent":["/* eslint-disable no-console */\n/* eslint-disable prefer-promise-reject-errors */\n'use strict';\n\nconst url\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\nconst urlDetail\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones/';\nconst body = document.querySelector('body');\n\nconst getPhones = () => {\n  return fetch(url)\n    .then(response => response.json())\n    .then(list => list.map(x => x.id));\n};\n\nconst getFirstReceivedDetails = (phones) => {\n  const arr = [];\n\n  for (const key of phones) {\n    const request = fetch(`${urlDetail}${key}.json`)\n      .then(response => response.json());\n\n    arr.push(request);\n  };\n\n  const result = Promise.race(arr);\n\n  return result;\n};\n\nfunction printFirstReceivedDetails(detail) {\n  const div = document.createElement('div');\n  const title = document.createElement('h3');\n  const ul = document.createElement('ul');\n  const li = document.createElement('li');\n\n  title.textContent = 'First Received';\n  div.className = 'first-received';\n  li.textContent = `Name: ${detail['name']} Id: ${detail['id']}`;\n  div.append(title, ul, li);\n  body.append(div);\n};\n\ngetPhones()\n  .then(getFirstReceivedDetails)\n  .then(printFirstReceivedDetails);\n\nconst getAllSuccessfulDetails = (phones) => {\n  const arr = [];\n\n  for (const key of phones) {\n    const request = fetch(`${url.slice(0, -5)}/${key}.json`)\n      .then(response => response.json());\n\n    arr.push(request);\n  };\n\n  const result = Promise.allSettled(arr)\n    .then(results => results.filter(details => details.status === 'fulfilled'))\n    .then(res => res.map(details => details.value));\n\n  return result;\n};\n\nfunction printAllSuccessfulDetails(details) {\n  const div = document.createElement('div');\n  const title = document.createElement('h3');\n  const ul = document.createElement('ul');\n\n  title.textContent = 'All Successful';\n  div.className = 'all-successful';\n\n  div.append(title, ul);\n  body.append(div);\n\n  for (const key of details) {\n    const li = document.createElement('li');\n\n    li.textContent = `Name: ${key['name']} Id: ${key['id']}`;\n\n    ul.append(li);\n  };\n};\n\ngetPhones()\n  .then(getAllSuccessfulDetails)\n  .then(printAllSuccessfulDetails);\n"]}